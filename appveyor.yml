environment:
  matrix:
  - TARGET: x86_64-pc-windows-msvc
    VERSION: 1.21.0
  - TARGET: i686-pc-windows-msvc
    VERSION: 1.21.0
  - TARGET: i686-pc-windows-gnu
    VERSION: 1.21.0
  - TARGET: x86_64-pc-windows-msvc
    VERSION: beta
  - TARGET: i686-pc-windows-msvc
    VERSION: beta
  - TARGET: i686-pc-windows-gnu
    VERSION: beta
  - TARGET: x86_64-pc-windows-msvc
    VERSION: nightly
  - TARGET: i686-pc-windows-msvc
    VERSION: nightly
  - TARGET: i686-pc-windows-gnu
    VERSION: nightly
install:
  - ps: Start-FileDownload "https://static.rust-lang.org/dist/rust-${env:VERSION}-${env:TARGET}.exe"
  - rust-%VERSION%-%TARGET%.exe /VERYSILENT /NORESTART /DIR="C:\Program Files (x86)\Rust"
  - SET PATH=%PATH%;C:\Program Files (x86)\Rust\bin
  - SET PATH=%PATH%;C:\MinGW\bin
  - rustc -V
  - cargo -V

build: false

test_script:
  - cargo build -vv
  - cargo build -vv --features=native
  - cargo test -vv
  # The native GNU build works on AppVeyor, but actually running the tests
  # exits immediately with no output. I suspect some kind of instruction
  # set issue in their virtual environment. When I run things on my own
  # physical Windows machine, it all works fine.
  - if not [%TARGET%]==[i686-pc-windows-gnu] (
      cargo test -vv --features=native
    ) else (
      echo SKIPPING --features=native test run on the GNU toolchain
    )
